#include "xc.h"
#include "libpic30.h"
#include "adc.h"

// Konfiguracja bitów konfiguracyjnych (zostawione zakomentowane, jeśli używasz MPLAB to one mogą być w pliku .gld lub GUI)
// #pragma config POSCMOD = XT
// #pragma config OSCIOFNC = ON
// #pragma config FCKSM = CSDCMD
// #pragma config FNOSC = PRI
// #pragma config IESO = ON
// #pragma config WDTPS = PS32768
// #pragma config FWPSA = PR128
// #pragma config WINDIS = ON
// #pragma config FWDTEN = ON
// #pragma config ICS = PGx2
// #pragma config GWRP = OFF
// #pragma config GCP = OFF
// #pragma config JTAGEN = OFF

void init(void) {
    TRISA = 0x0000;
    LATA = 0x0000;
    TRISDbits.TRISD6 = 1;
    AD1PCFG = 0xFFFF;
    TRISAbits.TRISA2 = 1;
    ADC_SetConfiguration(ADC_CONFIGURATION_DEFAULT);
    ADC_ChannelEnable(ADC_CHANNEL_POTENTIOMETER);
}

int main(void) {
    init();
    unsigned int adc_val;
    unsigned int threshold = 512;
    unsigned char alarm_active = 0;
    unsigned long blink_time = 0;

    while (1) {
        adc_val = ADC_Read10bit(ADC_CHANNEL_POTENTIOMETER);
        if (adc_val == 0xFFFF) continue;

        if (PORTDbits.RD6 == 0) {
            alarm_active = 0;
            LATA = 0x0000;
            continue;
        }

        if (!alarm_active && adc_val >= threshold) {
            alarm_active = 1;
            blink_time = 0;
        }

        if (alarm_active) {
            if (adc_val < threshold) {
                alarm_active = 0;
                LATA = 0x0000;
                continue;
            }

            if (blink_time < 5000000UL) {
                LATA = 0b11101111;
                __delay32(62500);
                LATA = 0x0000;
                __delay32(62500);
                blink_time += 125000;
            } else {
                LATA = 0b11101111;
            }
        } else {
            LATA = 0x0000;
        }
    }

    return 0;
}
