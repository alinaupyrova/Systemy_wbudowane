#pragma config POSCMOD = XT
#pragma config OSCIOFNC = ON
#pragma config FCKSM = CSDCMD
#pragma config FNOSC = PRI
#pragma config IESO = ON
#pragma config WDTPS = PS32768
#pragma config FWPSA = PR128
#pragma config WINDIS = ON
#pragma config FWDTEN = ON
#pragma config ICS = PGx2
#pragma config GWRP = OFF
#pragma config GCP = OFF
#pragma config JTAGEN = OFF

#include "xc.h"
#include "libpic30.h"
#include "adc.h"
#include "buttons.h"

void configure_system(void) {
    TRISA = 0x0000;
    TRISB |= (1 << 3);
    AD1PCFG = 0xFFFB;
    ADC_SetConfiguration(ADC_CONFIGURATION_DEFAULT);
    ADC_ChannelEnable(ADC_CHANNEL_POTENTIOMETER);
    LATA = 0x0000;
}

int main(void) {
    const unsigned int ALARM_THRESHOLD = 512;
    const unsigned long BLINK_INTERVAL = 500000;
    const unsigned long BLINK_PHASE_DURATION = 5000000;
    
    int alarm_triggered = 0;
    int blinking_phase = 0;
    unsigned long time_counter = 0;
    
    configure_system();

    while (1) {
        unsigned int pot_value = ADC_Read10bit(ADC_CHANNEL_POTENTIOMETER);
        
        if (!alarm_triggered && pot_value > ALARM_THRESHOLD) {
            alarm_triggered = 1;
            blinking_phase = 1;
            time_counter = 0;
        }
        
        if (alarm_triggered) {
            if (pot_value <= ALARM_THRESHOLD || (PORTB & (1 << 3))) {
                alarm_triggered = 0;
                blinking_phase = 0;
                LATA = 0x0000;
                continue;
            }
            
            if (blinking_phase) {
                if ((time_counter / BLINK_INTERVAL) % 2) {
                    LATA = 0x0010;
                } else {
                    LATA = 0x0000;
                }
                
                __delay32(100000);
                time_counter += 100000;
                
                if (time_counter >= BLINK_PHASE_DURATION) {
                    blinking_phase = 0;
                    LATA = 0xFFFF;
                }
            }
        } else {
            LATA = 0x0000;
        }
    }

    return 0;
}
